{"version":3,"sources":["api/socketApi.js","config/index.js","context/webSocketContext.js","api/request.js","api/api.js","components/Button/Button.js","components/DataDisplay/DataDisplay.js","containers/MainPanel/MainPanel.js","App.js","index.js"],"names":["socket","io","socketAPI","callBack","on","temperature","console","log","emit","webSocketContext","createContext","WebSocketProvider","props","useState","temperature1","setTemperature1","temperature2","setTemperature2","useEffect","t","context","getTemperature2","Provider","value","children","request","a","method","url","data","axios","result","status","post","api","get","patch","headers","resource","put","API","remove","Button","className","isActive","onClick","text","DataDisplay","MainPanel","socketContext","useContext","currentTemperature1","currentTemperature2","isEnabledLamp1","setModeLamp1","isEnabledLamp2","setModeLamp2","isEnabledLamp3","setModeLamp3","isTherm2Active","setIsTherm2Active","toggleLamp1","lamp1","statusText","toggleLamp2","lamp2","toggleLamp3","lamp3","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.268fef29.chunk.js","sourcesContent":["import io from 'socket.io-client'\r\nimport { config } from '../config'\r\n\r\nconst socket = io(config.API_URL)\r\n\r\nconst subscribeThermosensor = (callBack) => {\r\n\r\n  socket.on('newTemperature', (temperature) => {\r\n      callBack(temperature)\r\n      console.log('new t from server: ', temperature)\r\n    }\r\n  )\r\n\r\n  socket.emit('subscribeThermosensor', 2000);\r\n}\r\n\r\nconst getTemperature2 = (callBack) => {\r\n\r\n  socket.on('newTemperature2', (temperature) => {\r\n    if(temperature) {\r\n      callBack(temperature)\r\n      console.log('new t2 from server: ', temperature)\r\n    } else {\r\n      console.log('error get temperature2')\r\n    }\r\n  })\r\n  socket.emit('getTemperature2')\r\n}\r\n\r\nexport const socketAPI = {\r\n  subscribeThermosensor,\r\n  getTemperature2,\r\n}\r\n","export const config = {\n  API_URL: 'http://localhost:5000',//for development\n  // API_URL: 'http://192.168.31.193:5000', //for rpi\n  //API_URL: 'http://192.168.31.58:5000', //for laptop\n}\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { socketAPI } from '../api/socketApi'\r\n\r\nconst webSocketContext = createContext()\r\n\r\nconst WebSocketProvider = (props) => {\r\n\r\n  const [temperature1, setTemperature1] = useState(null)\r\n  const [temperature2, setTemperature2] = useState(null)\r\n\r\n  useEffect(() => {\r\n    socketAPI.subscribeThermosensor(\r\n      (t) => setTemperature1(t)\r\n     )\r\n  }, [])\r\n\r\n  const _getTemperature2 = () => {\r\n    socketAPI.getTemperature2(\r\n      (t) => setTemperature2(t)\r\n     )\r\n  }\r\n\r\n  const context = {\r\n    temperature1: temperature1,\r\n    temperature2: temperature2,\r\n    // setTemperature1: setTemperature1,\r\n\r\n    getTemperature2: _getTemperature2,\r\n  }\r\n\r\n  return <webSocketContext.Provider value={{ ...context }}>{props.children}</webSocketContext.Provider>\r\n}\r\n\r\nexport { webSocketContext, WebSocketProvider }","import axios from 'axios'\n// import { config } from '../config'\n\nconst request = async ({ method, url, data }) => {\n  try {\n    const result = await axios({method: method, url: url, data: data});\n\n    console.log('HTTP status', result.status)\n    console.log('HTTP response data', result.data)\n\n    return result;\n  \n  } catch (e) {\n    console.log('request', e)\n    return null\n  }\n}\n\nexport {\n  request,\n}\n","import * as api from './request'\n\nconst post = async ({ url, data }) => {\n  return await api.request({\n    method: 'POST',\n    url: url,\n    data: data,\n  })\n}\n\nconst get = async ({ url }) => {\n  return await api.request({\n    method: 'GET',\n    url: url,\n  })\n}\n\nconst patch = async ({ url, data, headers = [] }) => {\n  return await api.request({\n    method: 'PATCH',\n    resource: url,\n    data: data,\n    // headers: headers,\n  })\n}\n\nconst put = async ({ url, data }) => {\n  return await api.request({\n    method: 'PUT',\n    url: url,\n    data: data,\n    // headers: headers,\n  })\n}\n\nconst remove = async ({ url,headers = [] }) => {\n  return await api.request({\n    method: 'DELETE',\n    resource: url,\n    // headers: headers,\n  })\n}\n\nexport const API = {\n  post,\n  patch,\n  get,\n  remove,\n  put,\n}\n","import React from 'react'\r\nimport './button.scss'\r\n \r\nconst Button = (props) => {\r\n\r\n  return(\r\n    <div  className={`btn ${props.isActive ? 'active' : ''}`} onClick={props.onClick}>\r\n      {props.text}\r\n    </div>\r\n  )\r\n}\r\nexport default Button","import React from 'react'\r\nimport './dataDisplay.scss'\r\n \r\nconst DataDisplay = (props) => {\r\n\r\n  return(\r\n    <div className={`data-display ${props.temperature >= 30 && 'danger'}`}>\r\n      {props.temperature} &deg;C\r\n    </div>\r\n  )\r\n}\r\nexport default DataDisplay","import React, { useState, useContext } from 'react'\r\nimport { API } from '../../api/api'\r\nimport { webSocketContext } from '../../context/webSocketContext'\r\nimport Button from '../../components/Button/Button'\r\nimport DataDisplay from '../../components/DataDisplay/DataDisplay'\r\nimport './mainPanel.scss'\r\n\r\nconst MainPanel = () => {\r\n\r\n  const socketContext = useContext(webSocketContext)\r\n  const currentTemperature1 = socketContext.temperature1\r\n  const currentTemperature2 = socketContext.temperature2\r\n  \r\n\r\n  const [isEnabledLamp1, setModeLamp1] = useState(false)\r\n  const [isEnabledLamp2, setModeLamp2] = useState(false)\r\n  const [isEnabledLamp3, setModeLamp3] = useState(false)\r\n\r\n  const [isTherm2Active, setIsTherm2Active] = useState(false)\r\n\r\n\r\n  const toggleLamp1 = async () => {\r\n    setModeLamp1(!isEnabledLamp1);\r\n    const result = await API.put({ url: '/lamps/1', data: {lamp1: !isEnabledLamp1}});\r\n    if(result) {\r\n      console.log('status: ', result.status);\r\n      console.log('statusText: ', result.statusText);\r\n      console.log('data: ', !isEnabledLamp1);\r\n    } else {\r\n      console.log('Error request')\r\n    }   \r\n  }\r\n\r\n  const toggleLamp2 = async () => {\r\n    setModeLamp2(!isEnabledLamp2);\r\n    const result = await API.put({ url: '/lamps/2', data: {lamp2: !isEnabledLamp2}});\r\n    if(result) {\r\n      console.log('status: ', result.status);\r\n      console.log('statusText: ', result.statusText);\r\n      console.log('data: ', !isEnabledLamp2);\r\n    } else {\r\n      console.log('Error request')\r\n    }\r\n  }\r\n\r\n  const toggleLamp3 = async () => {\r\n    setModeLamp3(!isEnabledLamp3);\r\n    const result = await API.put({ url: '/lamps/3', data: {lamp3: !isEnabledLamp3}});\r\n    if(result) {\r\n      console.log('status: ', result.status);\r\n      console.log('statusText: ', result.statusText);\r\n      console.log('data: ', !isEnabledLamp3);\r\n    } else {\r\n      console.log('Error request')\r\n    }\r\n  }\r\n\r\n  const getTemperature2 =  () => {\r\n    socketContext.getTemperature2()\r\n    setIsTherm2Active(!isTherm2Active)\r\n  }\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <h1 className=\"main-title\">Control panel</h1>\r\n      <section className=\"main-content\">\r\n        <div className=\"main-content-param\">\r\n          <h2 className=\"main-content-param-title\">Lamps</h2>\r\n          <ul className=\"main-content-param-list\">\r\n            <li className=\"main-content-param-list-item\"><Button text=\"# 1\" onClick={toggleLamp1} isActive={isEnabledLamp1} /></li>\r\n            <li className=\"main-content-param-list-item\"><Button text=\"# 2\" onClick={toggleLamp2} isActive={isEnabledLamp2}/></li>\r\n            <li className=\"main-content-param-list-item\"><Button text=\"# 3\" onClick={toggleLamp3} isActive={isEnabledLamp3}/></li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <div className=\"main-content-param\">\r\n          <h2 className=\"main-content-param-title\">Thermo-sensor # 1</h2>\r\n          <ul className=\"main-content-param-list\">\r\n            <li className=\"main-content-param-list-item\">\r\n              <p className=\"main-content-param-list-title\">on-line monitoring:</p>\r\n            </li>\r\n            <li className=\"main-content-param-list-item\">\r\n              <DataDisplay temperature={currentTemperature1}/>\r\n            </li>       \r\n          </ul>          \r\n        </div>\r\n        \r\n        <div className=\"main-content-param\">\r\n          <h2 className=\"main-content-param-title\">Thermo-sensor # 2</h2>\r\n\r\n          <ul className=\"main-content-param-list\">\r\n            <li className=\"main-content-param-list-item\">\r\n              <Button text=\"Check\" onClick={getTemperature2} isActive={isTherm2Active}/>\r\n            </li>            \r\n            <li className=\"main-content-param-list-item\">\r\n              { isTherm2Active\r\n                ? <DataDisplay temperature={currentTemperature2} />\r\n                : null\r\n              }\r\n              </li>\r\n          </ul>\r\n        </div>\r\n\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default MainPanel","import React from 'react'\nimport { WebSocketProvider } from './context/webSocketContext'\nimport './reset.scss'\nimport './app.scss'\nimport MainPanel from './containers/MainPanel/MainPanel'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <WebSocketProvider>\n        <MainPanel />\n      </WebSocketProvider>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}